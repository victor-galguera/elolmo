<?php

/**
 * @file
 * Contains rules_role_email.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\rules\Entity\ReactionRuleConfig;

/**
 * Implements hook_help().
 */
function rules_role_email_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the rules_role_email module.
    case 'help.page.rules_role_email':
      $steps = [
        '#theme' => 'item_list',
        '#list_type' => 'ol',
        '#items' => [
          t('From the rules settings page, first add a reaction rule by clicking "Add reaction rule."'),
          t('Once you have done that click "Edit" to edit your reaction rule.'),
          t('Click "Add action"'),
          t('You should now see an "Action" dropdown. In that dropdown, click on "Send an email to all users of a role" in the "User" category and click "Continue"'),
          t('Enter in the machine name for each role along with the other required fields. For the "Entity" field, you will need to click "Switch to data selection" before you save.'),
          t('Click the "Save" button.'),
          t('Try triggering that role. All users of the roles you specified should receive an email notification.'),
        ],
      ];

      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module provides a Rules action that sends emails to users of specified roles.') . '</p>';
      $output .= '<dl>';
      $output .= '<dt>' . t('How to use') . '</dt>';
      $output .= '<dd>' . Drupal::service('renderer')->render($steps) . '</dd>';
      $output .= '</dl>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add a token tree link so the user knows what tokens they can use
 * for the "Subject" and "Message" fields.
 */
function rules_role_email_form_rules_expression_edit_alter(&$form, FormStateInterface $form_state) {
  // Get the rules reaction object to make sure we only add the token tree
  // link to the 'forum_topic_needs_moderation' rule reaction.
  // We do not want this to get added to other reaction rule action forms.
  $reaction_config = Drupal::routeMatch()->getParameter('rules_reaction_rule');

  if ($reaction_config instanceof ReactionRuleConfig) {
    $rules_action_config = $reaction_config->getExpression()->getConfiguration();
    $rules_action_id = isset($rules_action_config['actions']['actions'][0]['action_id']) ? $rules_action_config['actions']['actions'][0]['action_id'] : '';

    if ($rules_action_id != 'role_email_action') {
      return;
    }
  }

  $form['context']['message']['setting']['#type'] = 'textarea';

  if (isset($form['context']['entity']['setting']['#default_value'])) {
    $form['context']['subject']['token_help'] = [
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
    ];
    $form['context']['subject']['token_help']['tokens'] = [
      '#theme' => 'token_tree_link',
      '#token_types' => [$form['context']['entity']['setting']['#default_value']],
      '#global_types' => FALSE,
      '#click_insert' => TRUE,
    ];
    $form['context']['message']['token_help'] = [
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
    ];
    $form['context']['message']['token_help']['tokens'] = [
      '#theme' => 'token_tree_link',
      '#token_types' => [$form['context']['entity']['setting']['#default_value']],
      '#global_types' => FALSE,
      '#click_insert' => TRUE,
    ];
  }
}
